from pathlib import Path

from aiogram import types

from app.index import *
from app.components.markups import activity_kb, main_menu_callback
from app.components.states import User_States
import json


@dp.message_handler(commands="start", state="*")
async def _(message: types.Message):
    user_id = message.from_id

    await message.reply(
        text='‚≠ê–ü—Ä–∏–≤–µ—Ç‚≠ê \n –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—É –ò–Ω–æ–ø–æ–ª–∏—Å'
    )

    await message.answer(
        text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–µ –∏–º—è —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞)'
    )

    await User_States.enter_name.set()


@dp.message_handler(state=User_States.enter_name)
async def _(message: types.Message):

    await message.answer(
        text=f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è ,__{message.text}__ \n \n–¢–µ–ø–µ—Ä—å –º–æ–µ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –Ω–∏–∂–µ \n {' ' * 15}üîΩ{' ' * 35}üîΩ",
        parse_mode='MarkdownV2',
        reply_markup=activity_kb
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
@dp.callback_query_handler(main_menu_callback.filter(choice='nav'), state="*")
async def _(call: types.CallbackQuery, callback_data: dict):


    admins = users.get('admins')


    for admin, aid in admins.items():
        try: pass
        except Exception as e:
            await call.message.answer(str(e))

    await call.message.answer(f"–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ")
